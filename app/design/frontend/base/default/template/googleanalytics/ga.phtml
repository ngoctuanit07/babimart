<?php
/**
 * Magento
 *
 * NOTICE OF LICENSE
 *
 * This source file is subject to the Academic Free License (AFL 3.0)
 * that is bundled with this package in the file LICENSE_AFL.txt.
 * It is also available through the world-wide-web at this URL:
 * http://opensource.org/licenses/afl-3.0.php
 * If you did not receive a copy of the license and are unable to
 * obtain it through the world-wide-web, please send an email
 * to license@magentocommerce.com so we can send you a copy immediately.
 *
 * DISCLAIMER
 *
 * Do not edit or add to this file if you wish to upgrade Magento to newer
 * versions in the future. If you wish to customize Magento for your
 * needs please refer to http://www.magentocommerce.com for more information.
 *
 * @category    design
 * @package     base_default
 * @copyright   Copyright (c) 2013 Magento Inc. (http://www.magentocommerce.com)
 * @license     http://opensource.org/licenses/afl-3.0.php  Academic Free License (AFL 3.0)
 */
?>
<?php if (!Mage::helper('core/cookie')->isUserNotAllowSaveCookie()): ?>
<?php $accountId = Mage::getStoreConfig(Mage_GoogleAnalytics_Helper_Data::XML_PATH_ACCOUNT) ?>
 <!-- Google Analytics -->
    <script>
        /**
         * Creates a temporary global ga object and loads analy  tics.js.
         * Paramenters o, a, and m are all used internally.  They could have been declared using 'var',
         * instead they are declared as parameters to save 4 bytes ('var ').
         *
         * @param {Window}      i The global context object.
         * @param {Document}    s The DOM document object.
         * @param {string}      o Must be 'script'.
         * @param {string}      g URL of the analytics.js script. Inherits protocol from page.
         * @param {string}      r Global name of analytics object.  Defaults to 'ga'.
         * @param {DOMElement?} a Async script tag.
         * @param {DOMElement?} m First script tag in document.
         */
        (function(i, s, o, g, r, a, m){
            i['GoogleAnalyticsObject'] = r; // Acts as a pointer to support renaming.

            // Creates an initial ga() function.  The queued commands will be executed once analytics.js loads.
            i[r] = i[r] || function() {
                    (i[r].q = i[r].q || []).push(arguments)
                },

                // Sets the time (as an integer) this tag was executed.  Used for timing hits.
                i[r].l = 1 * new Date();

            // Insert the script tag asynchronously.  Inserts above current tag to prevent blocking in
            // addition to using the async attribute.
            a = s.createElement(o),
                m = s.getElementsByTagName(o)[0];
            a.async = 1;
            a.src = g;
            m.parentNode.insertBefore(a, m)
        })(window, document, 'script', '//www.google-analytics.com/analytics.js', 'ga');

        ga('create', '<?php echo $accountId ?>', 'auto'); // Creates the tracker with default parameters.
        ga('send', 'pageview');            // Sends a pageview hit.
    </script>
    <!-- End Google Analytics -->
<?php endif; ?>
